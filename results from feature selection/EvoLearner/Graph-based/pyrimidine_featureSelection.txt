Length of Property: 5
Concepts ((∃ p3_h_acceptor.xsd:double[≥ 0.3]) ⊔ (∃ p2_size.xsd:double[≥ 0.18])) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.5]) ⊓ (∃ p1_size.xsd:double[≥ 0.18])
Count 1
Length of Property: 5
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.5]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26])
Count 1
Length of Property: 5
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.5])
Count 1
Length of Property: 5
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.7])
Count 1
Length of Property: 5
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26])
Count 1
Length of Property: 5
Concepts (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.5])
Count 1
Length of Property: 5
Concepts (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.5]) ⊓ (∃ p1_size.xsd:double[≥ 0.18])
Count 1
Length of Property: 5
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.5]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_size.xsd:double[≥ 0.18])
Count 1
Length of Property: 5
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_size.xsd:double[≥ 0.18])
Count 1
Length of Property: 5
Concepts (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p1_size.xsd:double[≥ 0.18])
Count 1
Length of Property: 5
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.5])
Count 1
Length of Property: 5
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.5]) ⊓ (∃ p2_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_size.xsd:double[≥ 0.18])
Count 1
Length of Property: 5
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p2_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_size.xsd:double[≥ 0.18])
Count 1
Length of Property: 5
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.18])
Count 1
Length of Property: 5
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.5]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.18])
Count 1
Length of Property: 5
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.7])
Count 1
Length of Property: 5
Concepts (∃ p2_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.5])
Count 1
Length of Property: 5
Concepts (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.7])
Count 1
Length of Property: 5
Concepts (∃ p2_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.7])
Count 1
Length of Property: 5
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p2_size.xsd:double[≥ 0.26])
Count 1
Length of Property: 5
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26])
Count 1
Length of Property: 5
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.5])
Count 1
Length of Property: 5
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.7])
Count 1
Length of Property: 5
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.5])
Count 1
Length of Property: 5
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.5])
Count 1
Length of Property: 5
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.5]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_size.xsd:double[≥ 0.18])
Count 1
Length of Property: 5
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.7])
Count 1
Length of Property: 5
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26])
Count 1
Length of Property: 5
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_pi_acceptor.xsd:double[≤ 0.7])
Count 1
Selected Props ['p1_size', 'p1_h_acceptor', 'p2_size', 'p3_h_acceptor', 'p2_pi_acceptor']
str_target_concept lp_1
F1 Score: 1.0
Accuracy: 1.0
selected feature: ['p1_size', 'p1_h_acceptor', 'p2_size', 'p3_h_acceptor', 'p2_pi_acceptor']
Time Taken for Feature selection: 3.5507960319519043
Time Taken for Running fit and predict: 5.07491660118103
=============================================
Length of Property: 7
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p1_flex.xsd:double[≤ 0.2]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p1_polarizable.xsd:double[≥ 0.233])
Count 1
Length of Property: 7
Concepts (∃ p1_sigma.xsd:double[≥ 0.18]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p2_sigma.xsd:double[≥ 0.18])
Count 1
Length of Property: 7
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p1_sigma.xsd:double[≥ 0.18]) ⊓ (∃ p2_sigma.xsd:double[≥ 0.18])
Count 1
Length of Property: 7
Concepts (∃ p1_flex.xsd:double[≤ 0.2]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p1_sigma.xsd:double[≥ 0.18])
Count 1
Length of Property: 7
Concepts (∃ p2_sigma.xsd:double[≥ 0.18]) ⊓ (∃ p1_sigma.xsd:double[≥ 0.18]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.7])
Count 1
Length of Property: 7
Concepts (∃ p1_pi_donor.xsd:double[≤ 0.7]) ⊓ (∃ p1_sigma.xsd:double[≥ 0.18]) ⊓ (∃ p1_flex.xsd:double[≤ 0.25])
Count 1
Length of Property: 7
Concepts (∃ p1_flex.xsd:double[≤ 0.25]) ⊓ (∃ p1_sigma.xsd:double[≥ 0.18]) ⊓ (∃ p1_h_acceptor.xsd:double[≤ 0.7])
Count 1
Length of Property: 7
Concepts (∃ p1_pi_donor.xsd:double[≤ 0.7]) ⊓ (∃ p1_sigma.xsd:double[≥ 0.18]) ⊓ (∃ p1_flex.xsd:double[≤ 0.25])
Count 1
Length of Property: 7
Concepts (∃ p1_h_acceptor.xsd:double[≤ 0.7]) ⊓ (∃ p2_sigma.xsd:double[≥ 0.18]) ⊓ (∃ p1_sigma.xsd:double[≥ 0.18])
Count 1
Length of Property: 7
Concepts (∃ p1_pi_donor.xsd:double[≤ 0.7]) ⊓ (∃ p1_sigma.xsd:double[≥ 0.18]) ⊓ (∃ p2_sigma.xsd:double[≥ 0.18])
Count 1
Selected Props ['p1_polarizable', 'p2_sigma', 'p1_h_acceptor', 'p1_sigma', 'p1_polar', 'p1_flex', 'p1_pi_donor']
str_target_concept lp_1
F1 Score: 0.85714
Accuracy: 0.875
selected feature: ['p1_polarizable', 'p2_sigma', 'p1_h_acceptor', 'p1_sigma', 'p1_polar', 'p1_flex', 'p1_pi_donor']
Time Taken for Feature selection: 1.4513509273529053
Time Taken for Running fit and predict: 0.5307209491729736
=============================================
Length of Property: 6
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ ((∃ p2_size.xsd:double[≥ 0.26]) ⊔ (∃ p3_size.xsd:double[≥ 0.5]))
Count 1
Length of Property: 6
Concepts ⊤ ⊓ (((∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26])) ⊔ (∃ p3_size.xsd:double[≥ 0.5]))
Count 1
Length of Property: 6
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (((∃ p1_sigma.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26])) ⊔ (∃ p3_size.xsd:double[≥ 0.5]) ⊔ (∃ p2_size.xsd:double[≥ 0.26]))
Count 1
Length of Property: 6
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26])
Count 1
Length of Property: 6
Concepts (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.18])
Count 1
Length of Property: 6
Concepts (∃ p1_polarizable.xsd:double[≥ 0.233]) ⊓ (∃ p2_size.xsd:double[≥ 0.26])
Count 1
Length of Property: 6
Concepts (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_size.xsd:double[≥ 0.18])
Count 1
Length of Property: 6
Concepts (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_polarizable.xsd:double[≥ 0.233])
Count 1
Length of Property: 6
Concepts ⊤ ⊓ (∃ p1_size.xsd:double[≥ 0.18]) ⊓ (∃ p2_size.xsd:double[≥ 0.26])
Count 1
Length of Property: 6
Concepts ⊤ ⊓ (∃ p2_size.xsd:double[≥ 0.26]) ⊓ (∃ p1_size.xsd:double[≥ 0.18])
Count 1
Selected Props ['p1_polar', 'p1_size', 'p2_size', 'p1_sigma', 'p3_size', 'p1_polarizable']
str_target_concept lp_1
F1 Score: 0.8
Accuracy: 0.75
selected feature: ['p1_polar', 'p1_size', 'p2_size', 'p1_sigma', 'p3_size', 'p1_polarizable']
Time Taken for Feature selection: 0.7697691917419434
Time Taken for Running fit and predict: 0.23524928092956543
=============================================
